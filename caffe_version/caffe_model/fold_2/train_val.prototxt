name: "HED"
layer {
  name: "data"
  type: "ImageLabelmapData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    mean_file: "/data/harrisonap/Data/lung_detection//train_test_splits/train_colour_slice_list_2.lst_mean_image.binaryproto"
  }
  image_data_param {
    source: "/data/harrisonap/Data/lung_detection//train_test_splits/train_colour_slice_list_2.lst"
    batch_size: 2
    shuffle: true
    new_height: 400
    new_width: 400
    is_color: true
    root_folder: "/data/harrisonap/Data/lung_detection/"
  }
}
layer {
  name: "data"
  type: "ImageLabelmapData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    mean_file: "/data/harrisonap/Data/lung_detection//train_test_splits/train_colour_slice_list_2.lst_mean_image.binaryproto"
  }
  image_data_param {
    source: "/data/harrisonap/Data/lung_detection//train_test_splits/val_colour_slice_list_2.lst"
    batch_size: 4
    shuffle: true
    new_height: 400
    new_width: 400
    is_color: true
    root_folder: "/data/harrisonap/Data/lung_detection/"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 64
    pad: 35
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "batch-norm1"
  type: "BatchNorm"
  bottom: "conv1_2"
  top: "conv1_2-norm"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2-norm"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "batch-norm2"
  type: "BatchNorm"
  bottom: "conv2_2"
  top: "conv2_2-norm"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2-norm"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "batch-norm3"
  type: "BatchNorm"
  bottom: "conv3_3"
  top: "conv3_3-norm"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3-norm"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "batch-norm4"
  type: "BatchNorm"
  bottom: "conv4_3"
  top: "conv4_3-norm"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3-norm"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 100.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 200.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 100.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 200.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 100.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 200.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    engine: DEFAULT
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "batch-norm5"
  type: "BatchNorm"
  bottom: "conv5_3"
  top: "conv5_3-norm"
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
  param {
    lr_mult: 0.0
  }
}
layer {
  name: "score-dsn1"
  type: "Convolution"
  bottom: "conv1_2-norm"
  top: "score-dsn1-up"
  param {
    lr_mult: 0.01
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.02
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    engine: DEFAULT
  }
}
layer {
  name: "crop"
  type: "Crop"
  bottom: "score-dsn1-up"
  bottom: "data"
  top: "upscore-dsn1"
}
layer {
  type: "SigmoidCrossEntropyLoss"
  bottom: "upscore-dsn1"
  bottom: "label"
  top: "dsn1_loss"
  loss_weight: 1.0
  loss_param {
    beta: 0.1356
  }
}
layer {
  name: "score-dsn2"
  type: "Convolution"
  bottom: "conv2_2-norm"
  top: "score-dsn2"
  param {
    lr_mult: 0.01
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.02
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    engine: DEFAULT
  }
}
layer {
  name: "upsample_2"
  type: "Deconvolution"
  bottom: "score-dsn2"
  top: "score-dsn2-up"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 4
    stride: 2
  }
}
layer {
  name: "crop"
  type: "Crop"
  bottom: "score-dsn2-up"
  bottom: "data"
  top: "upscore-dsn2"
}
layer {
  name: "weighted_fuse"
  type: "Eltwise"
  bottom: "upscore-dsn1"
  bottom: "upscore-dsn2"
  top: "add-dsn2"
  eltwise_param {
    operation: SUM
  }
}
layer {
  type: "SigmoidCrossEntropyLoss"
  bottom: "add-dsn2"
  bottom: "label"
  top: "dsn2_loss"
  loss_weight: 1.0
  loss_param {
    beta: 0.1356
  }
}
layer {
  name: "score-dsn3"
  type: "Convolution"
  bottom: "conv3_3-norm"
  top: "score-dsn3"
  param {
    lr_mult: 0.01
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.02
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    engine: DEFAULT
  }
}
layer {
  name: "upsample_4"
  type: "Deconvolution"
  bottom: "score-dsn3"
  top: "score-dsn3-up"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 8
    stride: 4
  }
}
layer {
  name: "crop"
  type: "Crop"
  bottom: "score-dsn3-up"
  bottom: "data"
  top: "upscore-dsn3"
}
layer {
  name: "weighted_fuse"
  type: "Eltwise"
  bottom: "add-dsn2"
  bottom: "upscore-dsn3"
  top: "add-dsn3"
  eltwise_param {
    operation: SUM
  }
}
layer {
  type: "SigmoidCrossEntropyLoss"
  bottom: "add-dsn3"
  bottom: "label"
  top: "dsn3_loss"
  loss_weight: 1.0
  loss_param {
    beta: 0.1356
  }
}
layer {
  name: "score-dsn4"
  type: "Convolution"
  bottom: "conv4_3-norm"
  top: "score-dsn4"
  param {
    lr_mult: 0.01
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.02
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    engine: DEFAULT
  }
}
layer {
  name: "upsample_8"
  type: "Deconvolution"
  bottom: "score-dsn4"
  top: "score-dsn4-up"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 16
    stride: 8
  }
}
layer {
  name: "crop"
  type: "Crop"
  bottom: "score-dsn4-up"
  bottom: "data"
  top: "upscore-dsn4"
}
layer {
  name: "weighted_fuse"
  type: "Eltwise"
  bottom: "add-dsn3"
  bottom: "upscore-dsn4"
  top: "add-dsn4"
  eltwise_param {
    operation: SUM
  }
}
layer {
  type: "SigmoidCrossEntropyLoss"
  bottom: "add-dsn4"
  bottom: "label"
  top: "dsn4_loss"
  loss_weight: 1.0
  loss_param {
    beta: 0.1356
  }
}
layer {
  name: "score-dsn5"
  type: "Convolution"
  bottom: "conv5_3-norm"
  top: "score-dsn5"
  param {
    lr_mult: 0.01
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.02
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    engine: DEFAULT
  }
}
layer {
  name: "upsample_16"
  type: "Deconvolution"
  bottom: "score-dsn5"
  top: "score-dsn5-up"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 1
    kernel_size: 32
    stride: 16
  }
}
layer {
  name: "crop"
  type: "Crop"
  bottom: "score-dsn5-up"
  bottom: "data"
  top: "upscore-dsn5"
}
layer {
  name: "weighted_fuse"
  type: "Eltwise"
  bottom: "add-dsn4"
  bottom: "upscore-dsn5"
  top: "add-dsn5"
  eltwise_param {
    operation: SUM
  }
}
layer {
  type: "SigmoidCrossEntropyLoss"
  bottom: "add-dsn5"
  bottom: "label"
  top: "dsn5_loss"
  loss_weight: 1.0
  loss_param {
    beta: 0.1356
  }
}
